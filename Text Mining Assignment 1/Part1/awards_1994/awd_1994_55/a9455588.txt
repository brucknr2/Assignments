Title       : An Interactive Laboratory Infrastructure for Computer Science
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : January 18,  1995   
File        : a9455588

Award Number: 9455588
Award Instr.: Standard Grant                               
Prgm Manager: Theodore J. Sjoerdsma                   
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : June 1,  1995       
Expires     : May 31,  1997        (Estimated)
Expected
Total Amt.  : $93344              (Estimated)
Investigator: Rockford J. Ross ross@cs.montana.edu  (Principal Investigator current)
Sponsor     : Montana State University
	      
	      Bozeman, MT  597172470    406/994-0211

NSF Program : 7410      DUE COURSE & CURRICULUM PROG
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 7419,9178,SMET,
Abstract    :
              9455588  Ross  The objective of this project is the design and development of an
               infrastructure around which formal laboratories in computer science  can be
              implemented. The central component of the infrastructure is  a software system
              called DYNALAB, for DYNAmic LABoratory. DYNALAB  will run on Macintosh and
              IBM-compatible personal computers, as  well as X-terminals connected to central
              computers. Students using  DYNALAB have access--through a user interface
              oriented towards  complete novices--to a comprehensive, easily modifiable, and 
              extendible library of programs and experiments, including  experiments in
              program structure (e.g., iteration, selection,  recursion, execution-path
              determination, parameter passing  mechanisms, functions, procedures, and so
              forth), black box  determination of algorithms, time complexity, space
              complexity,  program verification, and others. A sophisticated program
              animation  component allows the execution of programs both forwards and in 
              reverse, while displaying dynamically and in interactive fashion  the pertinent
              aspects of program execution, such as the currently  executing statement,
              values of variables, pointer references, and  statement and memory cell counts
              (for time and space complexity  experiments). Algorithm animation components
              also allow abstract  graphical representations of algorithms to be presented on
              a screen  in forward and reverse modes for algorithm and data structure 
              studies. Finally, concept animations are included for the study of  fundamental
              computer science concepts, such as compiling,  multitasking, intractability,
              and so forth. The desirability of  formal laboratories in the computer science
              curriculum is well  documented, but few institutions ha e incorporated them for
              lack of  laboratory resources. It is expected that DYNALAB will be widely 
              adopted as a tool around which computer science laboratories can be  designed.
