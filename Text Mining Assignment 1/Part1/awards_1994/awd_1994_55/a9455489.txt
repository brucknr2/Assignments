Title       : An Assertion-Based Programming Methodology for Introductory Programming Courses
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : December 23,  1994  
File        : a9455489

Award Number: 9455489
Award Instr.: Standard Grant                               
Prgm Manager: Theodore J. Sjoerdsma                   
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : January 1,  1995    
Expires     : January 31,  1997    (Estimated)
Expected
Total Amt.  : $58283              (Estimated)
Investigator: Jerud J. Mead mead@bucknell.edu  (Principal Investigator current)
              Anil M. Shende  (Co-Principal Investigator current)
Sponsor     : Bucknell University
	      Office of Finance
	      Lewisburg, PA  17837    570/577-3334

NSF Program : 7410      DUE COURSE & CURRICULUM PROG
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 7419,9178,SMET,
Abstract    :
              9455489  Mead  A perusal of current introductory programming texts shows that 
              while the syntax of structured statements is described in formal  terms the
              semantics of structured statement is described in  informal verbal terms. The
              results is that students leave  introductory programming courses with a good
              understanding of the  syntactical aspects of structured programming and a poor 
              understanding of the semantical aspects. These programmers will  have
              difficulty assessing either formally of informally the  correctness of software
              which may control critical computer  systems. The goal of this project is to
              develop and assess a  programming methodology for the introductory programming
              sequence,  based on a blend of operational and axiomatic semantics, which 
              integrates semantic content (in terms of assertions) into the  programming
              process. A textbook will be written and assessed which  presents the
              methodology. The text will be language-independent and  useful either
              stand-alone or as a supplement to an existing  introductory programming text.
              The impact of this project is on  four groups. Instructors of introductory
              programming courses are  able to integrate the semantic-based methodology into
              their  existing courses without changing the primary text: the  supplementary
              text provides them formal support for integrating the  methodology. Students
              learning the methodology via the  supplementary text gain more thorough
              understanding of the program  semantics because the semantics are presented
              formally in terms of  assertions. They are better equipped to convince
              themselves and  others that their programs are correct because their programs
              carry  the evidence. Students, instructors, and computing professionals  who
              have not had the advantage of a semantic-based programming  methodology will be
              able  to use the text to familiarize themselves  with the more formal semantic
              side of programming. Finally, the  public will be long-term beneficiaries of
              the project. Developers  of computer systems whi ch the public depend on will
              be more  confident of the correctness of the systems when they are  programmed
              by students with a sound semantic background, which  should result when the
              methodology is learned.
