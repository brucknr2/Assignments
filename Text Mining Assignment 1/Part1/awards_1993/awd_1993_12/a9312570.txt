Title       : An Interactive Whiteboard Environment
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : March 29,  1995     
File        : a9312570

Award Number: 9312570
Award Instr.: Continuing grant                             
Prgm Manager: Frank D. Anger                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  1994 
Expires     : August 31,  1995     (Estimated)
Expected
Total Amt.  : $85000              (Estimated)
Investigator: Bradley T. Vander Zanden bvz@cs.utk.edu  (Principal Investigator current)
Sponsor     : U of Tennessee Knoxville
	      404 Andy Holt Tower
	      Knoxville, TN  379960140    865/974-3466

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9216,HPCC,
Abstract    :
              9312570  Vander      This project will develop demonstrational, visual 
              programming techniques and determine in which contexts  programmers prefer them
              to textual programming techniques.    An interactive, two-view environment will
              be provided in  which users can create programs by manipulating concrete 
              pictorial, examples of data structures or by entering code  into a textual
              editor.  Users will be able to create journal-  quality pictures of data
              structures, such as arrays, lists,  trees, and graphs, fill in example values. 
              The system will  use various inferencing strategies to construct appropriate 
              general-purpose code.    Users will be able to move back and forth between the
              visual  and textual editors, using whichever representation is most  natural.
              By providing both a visual and a textual  representation, it should be possible
              to determine those  operations which a programmer views as intrinsically 
              textual.  Ultimately these observations should allow better  programming
              environments to be built that provide  alternative ways of creating programs. 
              ***
