Title       : The Innovative use of Software in Teaching Computer Programming
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : February 23,  1994  
File        : a9354598

Award Number: 9354598
Award Instr.: Standard Grant                               
Prgm Manager: Theodore J. Sjoerdsma                   
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : July 1,  1994       
Expires     : June 30,  1996       (Estimated)
Expected
Total Amt.  : $86160              (Estimated)
Investigator: Jeffrey L. Popyack JPopyack@MCS.Drexel.edu  (Principal Investigator current)
              Nira Herrmann  (Co-Principal Investigator current)
Sponsor     : Drexel University
	      32 and Chestnut Street
	      Philadelphia, PA  19104    215/895-2000

NSF Program : 7410      DUE COURSE & CURRICULUM PROG
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 7419,9178,SMET,
Abstract    :
              9354598  Popyack  We are developing a new approach for teaching 'introduction to
               computing' courses, tailored to the needs of students in different  curricula.
              This approach is based on the following precepts:  There  is a strong need for
              students in all curricula to understand the  concepts of programming a
              computer, particularly in the sciences  and engineering fields.  It may no
              longer be necessary for  students in many majors to know how to write programs
              in  traditional block-structured languages (such as Pascal).  There is  a
              wealth of software in wide use today which allows the user to  write programs
              in specialized built-in 'macro languages'.  Teaching  programming concepts
              through the use of powerful, user-friendly  software with programmable features
              allows the user to write  programs immediately which produce non-trivial
              results. This  provides stronger motivation to learn programming than
              traditional  approaches.  Moreover, the essential concepts of computer 
              programming, (such as variables, branching, iteration, etc.) can be  readily
              illustrated and implemented using the sophisticated  features of a variety of
              commonly available software packages, such  as word processors, spreadsheets,
              and databases. The main intention  of our approach is to teach programming
              concepts and techniques,  not simply how to use software. Students are exposed
              to the kinds  of functionality common to all languages, thus facilitating the 
              learning of a general purpose language or new, innovative software  they will
              need for pursuing both their education and their careers  in science,
              engineering, or teaching.  ***y
