Title       : Component Engineering Principles in a Traditional CS Curriculum: A
               Reuse-Oriented Approach and its Evaluation
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : February 22,  1994  
File        : a9354597

Award Number: 9354597
Award Instr.: Standard Grant                               
Prgm Manager: Theodore J. Sjoerdsma                   
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : July 1,  1994       
Expires     : December 31,  1995   (Estimated)
Expected
Total Amt.  : $43425              (Estimated)
Investigator: Murali Sitaraman   (Principal Investigator current)
              Douglas E. Harms  (Co-Principal Investigator current)
              E. James Harner  (Co-Principal Investigator current)
Sponsor     : WV Univ Research Corp
	      P.O. Box 6845
	      Morgantown, WV  265066845    304/293-3998

NSF Program : 7410      DUE COURSE & CURRICULUM PROG
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 7419,9178,SMET,
Abstract    :
              9354597  Sitaraman  Demand for trained software professionals continues to be on
              the  rise. Introductory undergraduate courses in computer science do not 
              provide an appropriate context for motivating the importance of  good design,
              precise and abstract specification, and efficient and  correct implementations
              in software construction. These and other  key component and software
              engineering principles are therefore  introduced only much later in the
              curriculum as "add on" ideas,  rather than as central themes in problem
              solving. The relatively  late exposure leaves computer science students with
              little time to  master key concepts. Non-computer science majors are left in
              total  darkness with respect to software engineering issues and  principles. 
              Using software reuse as a motivating context (but not  as the dominant theme),
              we propose to introduce software  engineering principles in introductory
              computer science courses  while retaining the problem-solving techniques
              traditionally taught  in these courses. Specification-based reuse readily
              motivates the  need for traditional principles such as abstraction and new 
              principles such as software design. Having seen and used software  built the
              "right" way early, the students master the ideas by  applying them in projects
              in the rest of the curriculum. A major  objective of the project is to evaluate
              the long-term influences of  this proposal in multiple programming paradigms in
              multiple  institutions.  ***y
