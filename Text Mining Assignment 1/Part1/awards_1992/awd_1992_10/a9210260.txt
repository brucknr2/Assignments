Title       : Software Systems for Irregular Application on Scalable Multiprocessors
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 6,  1995       
File        : a9210260

Award Number: 9210260
Award Instr.: Continuing grant                             
Prgm Manager: Yechezkel Zalcstein                     
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  1992 
Expires     : August 31,  1996     (Estimated)
Expected
Total Amt.  : $87200              (Estimated)
Investigator: Katherine A. Yelick yelick@cs.berkeley.edu  (Principal Investigator current)
Sponsor     : U of Cal Berkeley
	      
	      Berkeley, CA  94720    415/642-6000

NSF Program : 4715      COMPUTER SYSTEMS ARCHITECTURE
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9216,9264,HPCC,
Abstract    :
              This project will implement systems software to support                        
              irregular parallel programs on scalable multiprocessors.                       
              Machines with physically distributed memory offer the best                     
              opportunity for scalable performance, but current programming                  
              techniques for these machines are cumbersome and often                         
              inefficient.  This is particularly true for applications with                  
              irregular data structures or irregular patterns of                             
              communication and control.  Two issues of primary concern are                  
              data layout and scheduling.  Data layout is critical to                        
              avoiding communication overhead, but good layout strategies                    
              are difficult to determine during compilation because they                     
              depend on global properties of the program and on input data.                  
              Similarly, scheduling for irregular problems must adapt to                     
              varying loads during program execution.  For both problems,                    
              there is a trade-off between the inflexibility of decisions                    
              made during compilation and the overhead of decisions made at                  
              runtime.  High level language mechanisms to allow the                          
              programmer to specify data layout and scheduling strategies,                   
              and implement them using a combination of compiler and runtime                 
              support will be developed.  The emphasis will be on irregular                  
              applications:  the layouts, for example, will describe the                     
              placement of subgraphs of a logically global graph, and the                    
              scheduling primitives will allow for both control and data                     
              parallelism.  Throughout the project's duration applications                   
              to motivate and test the systems work will be developed.
