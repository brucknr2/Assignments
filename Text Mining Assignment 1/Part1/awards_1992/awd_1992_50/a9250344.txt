Title       : Computer Science as Scientific Investigation
Type        : Award
NSF Org     : DUE 
Latest
Amendment
Date        : April 30,  1992     
File        : a9250344

Award Number: 9250344
Award Instr.: Standard Grant                               
Prgm Manager: Theodore J. Sjoerdsma                   
	      DUE  DIVISION OF UNDERGRADUATE EDUCATION     
	      EHR  DIRECT FOR EDUCATION AND HUMAN RESOURCES
Start Date  : May 1,  1992        
Expires     : April 30,  1995      (Estimated)
Expected
Total Amt.  : $99642              (Estimated)
Investigator: David A. Nuesse   (Principal Investigator current)
              Michael R. Wick  (Co-Principal Investigator current)
Sponsor     : U of Wisconsin Eau Claire
	      Park & Garfield
	      Eau Claire, WI  54701    715/836-2637

NSF Program : 7400      UNDERGRAD INSTRM & LAB IMPROVE
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9267,
Abstract    :
              Scientific investigation, the process of formulating                           
              hypotheses, designing experiments, and analyzing results is a                  
              critical aspectof any undergraduate program seeking to produce                 
              graduates capable of critical thought.  This important aspect                  
              of education has been missing from many computer science                       
              programs.  Introductory computer science courses are typically                 
              taught with heavy emphasis towards programming assignments.                    
              Students tend to perceive computer science as the tedious and                  
              repetitious study of writing relatively simple computer                        
              programs.  Scientifically oriented students are often drawn                    
              from the mundane task of introductory programming to more                      
              dynamic fields of experimentation and analysis.  These students                
              never experience the enormous variety and challenge of computer                
              problem solving.                                                               
              This project is designed to alter the way computer science is                  
              taught at the introductory level.  Four laboratory courses have                
              been specifically designed to serve both as a solid foundation                 
              forundergraduate majors and minors as well as to expose                        
              non-majors tothe exciting and varied facets of computer                        
              science.  The courses,Foundations I & II, provide a                            
              breadth-first introduction to major fields within computer                     
              science.  The course, Computer Problem Solving, augments the                   
              foundations courses with a problem solving perspective of                      
              computer programming.  Students will use supplied abstract data                
              types and alternative problem solving methods such as dynamic                  
              programming and divide-and-conquer in the solution and analysis                
              of classic computer science problems.  The fourth course, Data                 
              Structures extends this problem-solving perspective by                         
              comparing and analyzing alternative implementations of the                     
              abstract data types used in the computer problem-solving                       
              courses.  All four courses combine laboratory and lecture to                   
              produce a dynamic environment of hands-on experimentation and                  
              analysis.
