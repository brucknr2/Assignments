Title       : Algorithms for Implementing Relaxed Memory Consistency for Distributed Shared
               Memory
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 4,  1994     
File        : a9211004

Award Number: 9211004
Award Instr.: Continuing grant                             
Prgm Manager: Anand R. Tripathi                       
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  1992       
Expires     : June 30,  1996       (Estimated)
Expected
Total Amt.  : $89997              (Estimated)
Investigator: Alan Cox alc@rice.edu  (Principal Investigator current)
Sponsor     : William Marsh Rice Univ
	      6100 Main Street, MS-16
	      Houston, TX  772511892    713/348-4820

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9216,9264,HPCC,
Abstract    :
                   The objective of this project is to develop algorithms for                
              implementing a software distributed shared memory that reduce both the         
              number of messages and the amount of data transferred between                  
              processors.  A software distributed shared memory (DSM) enables                
              processes to share memory even when they execute on processors that            
              only communicate via message-passing.  In recent years, the developers         
              of tightly-coupled multiprocessors have adopted relaxed memory                 
              consistency models to reduce the latency of remote memory access.              
              However, in a distributed memory multiprocessor, it is equally                 
              important to reduce the number of messages used for remote memory              
              access.  The principal investigator has developed an algorithm that            
              implements a well known form of relaxed memory called Release                  
              Consistency.  This algorithm, called Lazy Release Consistency,                 
              differs from most previous work because it is designed specifically            
              for software DSM, rather then being an imitation of hardware                   
              implementations.  Our preliminary results using trace-driven                   
              simulation   indicate that Lazy Release Consistency significantly              
              reduces both the number of messages and the amount of data transferred         
              between processors.  In order to reduce communication, Lazy Release            
              Consistency performs more computation.  To  assess the impact of this          
              trade-off, Lazy Release Consistency is being implemented in the Munin          
              DSM and application program performance compared to previous work.
