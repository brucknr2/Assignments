Title       : Diagnosing Parallel and Distributed Software Performance Problems
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 7,  1994       
File        : a9211342

Award Number: 9211342
Award Instr.: Continuing grant                             
Prgm Manager: Anand R. Tripathi                       
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 15,  1992 
Expires     : February 28,  1995   (Estimated)
Expected
Total Amt.  : $87690              (Estimated)
Investigator: Marc Abrams abrams@cs.vt.edu  (Principal Investigator current)
Sponsor     : VA Polytechnic Inst & St U
	      301 Burruss Hall
	      Blacksburg, VA  240610249    540/231-6000

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9216,9264,HPCC,
Abstract    :
              Parallel and distributed computing will not enter the                          
              mainstream of computing until simple means are found to                        
              diagnose and correct performance problems.  This award                         
              supports development of a system which, given monitored data                   
              collected from multiple program execution observations, will                   
              trace back from a graph of a performance metric to the                         
              processes and portions of source code that should be modified                  
              to improve the metric.  The trace back is possible because all                 
              parts of the system, the source code, monitored data, graphs                   
              of performance metrics, and empirical and theoretical models,                  
              use a common state representation.  The system performs three                  
              novel functions.  First, it allows visual editing of monitored                 
              data from a small number of program executions to define                       
              aggregate states and an aggregate state transition rate matrix                 
              that can represent all observed program executions.  Second,                   
              it generates graphs of performance metrics from the empirical                  
              model, rather than from the monitored data, to accurately                      
              predict discontinuities in program behavior.  Third, it                        
              generates a theoretical model of program behavior that maps                    
              program behavior to a multidimensional Cartesian space.  The                   
              system is applied to a TCP/IP protocol implementation and a                    
              parallel discrete event simulation system.  Success in                         
              diagnosing performance problems in these large systems could                   
              change the way programmers design parallel and distributed                     
              software.
