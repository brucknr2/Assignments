Title       : Efficient Execution of Fine-Grained Concurrent Programs
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : April 26,  1994     
File        : a9209336

Award Number: 9209336
Award Instr.: Continuing grant                             
Prgm Manager: Anand R. Tripathi                       
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  1992       
Expires     : December 31,  1995   (Estimated)
Expected
Total Amt.  : $110000             (Estimated)
Investigator: Andrew A. Chien   (Principal Investigator current)
Sponsor     : U of Ill Urbana-Champaign
	      801 South Wright Street
	      Champaign, IL  61820    217/333-2186

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2876,9216,9264,HPCC,
Abstract    :
                   Fine-grained concurrent programs offer the potential for                  
              portable concurrent programming, but their efficient execution is not          
              yet practical.  The objective of this project is to develop                    
              techniques to support efficient execution of fine-grained programs by          
              transforming their execution grain size.                                       
                   Fine-grained programs present special problems because the                
              overhead of each grain can overwhelm the benefits of exploiting their          
              concurrency.  The project focuses on concurrent, object-based                  
              programs because they allow the expression of fine-grained concurrency         
              and couple data and program, providing important data locality                 
              information.  The program transformations increase program locality by         
              grouping objects.  This allows small computational grains to be                
              merged into larger grains, increasing execution efficiency and                 
              reducing communication requirements.                                           
                   The research will examine quantitative analysis of control and            
              communication patterns in concurrent object-oriented programs, the             
              development of program analysis and transformation techniques, and             
              their implementation and evaluation based on a sharable intermediate           
              form.  Quantitative analysis provides a useful point of reference and          
              the basis for understanding the behavior of programs.  The analysis            
              techniques identify invocation paths and static object relations,              
              enabling the application of program transformations grouping objects           
              along invocation paths.  Such techniques increase program locality,            
              reducing communication and permitting the use of more efficient,               
              specialized code sequences.
