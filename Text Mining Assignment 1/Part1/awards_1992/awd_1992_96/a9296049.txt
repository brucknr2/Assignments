Title       : RIA: Distributed Simulation of Clustered Processes
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : September 1,  1991  
File        : a9296049

Award Number: 9296049
Award Instr.: Standard Grant                               
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  1991  
Expires     : December 31,  1992   (Estimated)
Expected
Total Amt.  : $8700               (Estimated)
Investigator: Bojan Groselj   (Principal Investigator current)
Sponsor     : U of MD College Park
	      3112 Lee Building
	      College Park, MD  207425141    301/405-6269

NSF Program : 2875      SYSTEM SOFTWARE
Fld Applictn: 
Program Ref : 
Abstract    :
              In the last decade, discrete-event distributed simulation has been a           
              research topic of several researchers.  However, there has been no             
              commonly accepted solution, neither a commonly useful implementation.          
              The main objectives of this project are: (1) Increasing the concurrency        
              of distributed simulation by employing efficient graph algorithms, (2)         
              Finding an efficient distributed-deadlock detection algorithm for a            
              conservative distributed simulation, (3) Developing a suboptimal method        
              to eliminate cycles from a process graph by replicating some nodes and         
              edges of this graph, (4) Developing an efficient clustering algorithm          
              for mapping of processes to processors, (5) Investigate the problems of        
              flow control, load sharing, and memory management, (6) The                     
              implementation of (1) and (4) on the network of SUNs and/or on the             
              Encore Multimax multicomputer, (7) The evaluation of the proposed              
              methods by simulation (changing different parameters in the                    
              implementation, using different input models, comparing the performance        
              to a sequential simulation executed on a uniprocessor).
