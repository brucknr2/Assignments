Title       : Reusable Engineering Software Components: Interface Issues
Type        : Award
NSF Org     : CMS 
Latest
Amendment
Date        : November 16,  1994  
File        : a9201697

Award Number: 9201697
Award Instr.: Continuing grant                             
Prgm Manager: John Scalzi                             
	      CMS  DIV OF CIVIL AND MECHANICAL SYSTEMS     
	      ENG  DIRECTORATE FOR ENGINEERING             
Start Date  : November 15,  1992  
Expires     : April 30,  1997      (Estimated)
Expected
Total Amt.  : $137608             (Estimated)
Investigator: John W. Baugh jwb@eos.ncsu.edu  (Principal Investigator current)
Sponsor     : North Carolina State U
	      Lower Level Leazar Hall
	      Raleigh, NC  276957514    919/515-2444

NSF Program : 1635      INFRASTRUCT MAT & STRUCT MECHA
Fld Applictn: 0109000   Structural Technology                   
              54        Engineering-Civil                       
Program Ref : 1038,CVIS,
Abstract    :
              The objective of this research is to promote the integration and               
              reuse of engineering software components and systems by developing             
              pertinent approaches, notations, and tools.  Such capabilities are             
              needed to remain competitive in the engineering and construction               
              marketplace with the growing need for multi-disciplinary analyses              
              and simulations, design-for- construction and -manufacturing, and              
              the integration of analysis, design, and decision-support tools.               
              To enable integration and reuse, software components must be                   
              characterized by their functional properties, i.e., a description              
              of the services they provide.  Otherwise, one can only examine the             
              program text itself, attempt to characterize its behavior, and try             
              putting the pieces together.  Even object-oriented languages are               
              inadequate for promoting integration since they cannot be used to              
              state what a component does, only how it is implemented.                       
              Declarative descriptions of functional properties offer the                    
              potential to characterize the interaction of complex software                  
              components and systems, thus enabling software integration and                 
              reuse.  This study will develop formal notations for specifying                
              engineering software components, and apply them by developing a                
              handbook of reusable specifications.  By using formal methods, the             
              resulting specifications are independent of a particular                       
              programming language and may be manipulated and combined using                 
              ordinary mathematics.
