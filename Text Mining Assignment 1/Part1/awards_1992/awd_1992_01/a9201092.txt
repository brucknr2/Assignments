Title       : Program Checking
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 10,  1994    
File        : a9201092

Award Number: 9201092
Award Instr.: Continuing grant                             
Prgm Manager: Dana May Latch                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : May 15,  1992       
Expires     : October 31,  1994    (Estimated)
Expected
Total Amt.  : $363316             (Estimated)
Investigator: Manuel Blum   (Principal Investigator current)
Sponsor     : U of Cal Berkeley
	      
	      Berkeley, CA  94720    415/642-6000

NSF Program : 2860      THEORY OF COMPUTING
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9218,HPCC,
Abstract    :
              This research is concerned with a new idea for increasing the                  
              reliability of software, an idea that the principal investigator               
              calls program result checking (or program answer checking).  The idea          
              is to design programs to check their work.  As a rule, students in the         
              sciences must learn that each time they "solve" a problem, they should         
              "check" their result.  If an equation is solved for x, then x should           
              be substituted back into the equation to ensure that it works                  
              correctly.  The importance within mathematics, science, and                    
              engineering of checking one's work cannot be emphasized enough.  It is         
              a crucial ingredient of all good work.  Is it possible/desirable for a         
              program to check its own work?  This research seeks to show that in a          
              number of cases it is also possible for programs to correct their own          
              work.                                                                          
                                                                                             
              Checking sounds similar to Verification, but it is different.  For             
              one, Verification proves that a program is correct on all inputs.              
              Checking only proves that it is correct on the given input. It is felt         
              that Checking can be of use to  Verification and Testing, just as              
              Verification and Testing can each be of use to Checking.  More to the          
              point, it is felt that program  checking has the potential to increase         
              program reliability substantially.
