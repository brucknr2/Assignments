Title       : Theory and Implementation of Equational Logic Programming
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 3,  1992       
File        : a9016905

Award Number: 9016905
Award Instr.: Continuing grant                             
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : January 1,  1991    
Expires     : June 30,  1993       (Estimated)
Expected
Total Amt.  : $181315             (Estimated)
Investigator: Michael J. O'Donnell odonnell@cs.uchicago.edu  (Principal Investigator current)
Sponsor     : University of Chicago
	      5801 South Ellis Avenue
	      Chicago, IL  606371404    773/702-8602

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 
Abstract    :
                   This award will continue an ongoing research project to explore           
              the implementability and utility of Equational Logic Programming .             
              The project has already produced a compiler for an equational                  
              programming language, in which a program is a set of equations, an             
              input is a term, a computation is a derivation of certain logical              
              consequences of the equations in the program, leading to the output of         
              a term in normal form equivalent to the input.  Novel features of the          
              language include a total refusal to compromise semantics for                   
              performance, leading to a uniform use of "lazy" evaluation-- a                 
              technique in which precisely the information demonstrably relevant to          
              the final output is automatically computed-- and a lazy input/output           
              facility, which gives the consumer of a term dynamic control of its            
              computation.  The current version of the compiler uses partial                 
              evaluation of intermediate code as an optimized compilers for C.               
              Continuing research will include the study of more sophisticated               
              evaluation techniques to improve performance, the performance                  
              implications of applying those techniques to other languages,                  
              theoretical advances to extend the class of equational programs that           
              can be compiled, the semantic ramifications of introducing modular             
              programming constructs, and experimentation with advanced user                 
              interfaces, including structure editor interfaces.
