Title       : Research into the Design and Implementation of Logical Data base Languages
Type        : Award
NSF Org     : IIS 
Latest
Amendment
Date        : January 29,  1992   
File        : a9016358

Award Number: 9016358
Award Instr.: Continuing grant                             
Prgm Manager: Ron Ashany                              
	      IIS  DIV OF INFORMATION & INTELLIGENT SYSTEMS
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : February 15,  1991  
Expires     : July 31,  1993       (Estimated)
Expected
Total Amt.  : $180813             (Estimated)
Investigator: Jeffrey D. Ullman ullman@db.stanford.edu  (Principal Investigator current)
Sponsor     : Stanford University
	      651 Serra St.
	      Stanford, CA  94305    415/723-2300

NSF Program : 6855      INFORMATION & DATA MANAGEMENT
Fld Applictn: 0104000   Information Systems                     
              99        Other Sciences NEC                      
Program Ref : 
Abstract    :
              The new generation of database applications, such as design                    
              databases and scientific databases, and integrated, heterogeneous              
              databases, requires more powerful query languages, able to                     
              support declarative programming, ad-hoc queries, complex objects,              
              and other features not found in conventional DB languages. The                 
              GLUE/NAIL language provides, for the first time, all these                     
              capabilities in one language. It consists of a "semideclarative"               
              language, GLUE, which is essentially logical rules connected by                
              conventional sequencing, procedures, and modules, and NAIL, a                  
              completely declarative "view facility" for GLUE. To make the                   
              language efficient, certain optimization techniques, such as                   
              "magic sets" and "regular recursion optimization" must be used,                
              and they must be extended to handle certain other features. These              
              include negation in subgoals, following the well-founded                       
              semantics, aggregation (e.g., sum, avg.), and second-order logic               
              to support sets and other object-oriented capabilities.
