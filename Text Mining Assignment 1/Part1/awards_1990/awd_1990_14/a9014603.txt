Title       : Formal Verification of Compiler Algorithms
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : April 20,  1993     
File        : a9014603

Award Number: 9014603
Award Instr.: Continuing grant                             
Prgm Manager: Bruce H. Barnes                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  1991       
Expires     : December 31,  1994   (Estimated)
Expected
Total Amt.  : $330611             (Estimated)
Investigator: Mitchell Wand wand@ccs.neu.edu  (Principal Investigator current)
Sponsor     : Northeastern University
	      360 Huntington Avenue
	      Boston, MA  021155096    617/373-5600

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2880,9216,9289,
Abstract    :
              Because compilers are trusted components of almost every computer              
              system, it is important to have trustworthy proofs of their                    
              correctness.  A new method of proving compilers correct using higher-          
              order abstract assembly language has been developed recently.  This            
              project is to study how to extend such proofs to more realistic                
              compilers.  Mechanical support for the proof process will allow the            
              resulting proofs to be more trustworthy by supplying independent               
              verification of the human prover's work.  Three main areas of                  
              activities in this project include: (1) the use of mechanical theorem-         
              provers to support compiler correctness proofs, (2) the extension of           
              such proofs to optimizing compilers, and (3) a cooperative development         
              of a verified compiler for Scheme.
