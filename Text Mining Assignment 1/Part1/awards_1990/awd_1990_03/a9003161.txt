Title       : Fault-Tolerant Programming
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : March 26,  1993     
File        : a9003161

Award Number: 9003161
Award Instr.: Standard Grant                               
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1990     
Expires     : January 31,  1994    (Estimated)
Expected
Total Amt.  : $210626             (Estimated)
Investigator: Richard D. Schlichting rick@cs.arizona.edu  (Principal Investigator current)
Sponsor     : U of Arizona
	      601 Administration Building
	      Tucson, AZ  85721    602/621-2211

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2875,
Abstract    :
                   A fault-tolerant, distributed program is a program that can               
              continue executing despite processor and network failures.  The                
              general goal of this research is to develop techniques and support             
              systems that facilitate the design, construction, and verification of          
              this type of software.  To accomplish this goal, a number of topics            
              will be investigated in areas ranging from communication protocols to          
              formal verification.  In particular: operating system support for              
              fault-tolerant, distributed programming; programming language                  
              abstractions that facilitate construction of fault-tolerant,                   
              distributed systems; extension of existing software engineering                
              techniques and programming environments to encompass fault-tolerant            
              programming; and verification of fault-tolerant programs will be               
              studied.  The first, second, and fourth topics represent the                   
              continuation of investigations currently underway and natural                  
              extensions in those areas, while the third is a new initiative.  Since         
              fault-tolerance is difficult to study in isolation, this work is based         
              largely on existing systems and languages, including the SR                    
              distributed programming language, the Psync interprocess communication         
              mechanism, and the Software Designer's Associate project.  This                
              approach also facilitates immediate progress on research issues by             
              eliminating the need to construct necessary infrastructure.
