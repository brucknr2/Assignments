Title       : Mechanized Code Proofs Based on a Formal Microprocessor Specification
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : February 20,  1992  
File        : a9017499

Award Number: 9017499
Award Instr.: Continuing grant                             
Prgm Manager: John R. Lehmann                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : May 15,  1991       
Expires     : October 31,  1993    (Estimated)
Expected
Total Amt.  : $139812             (Estimated)
Investigator: Robert S. Boyer   (Principal Investigator current)
Sponsor     : U of Texas Austin
	      P.O Box 7726
	      Austin, TX  787137726    512/471-6424

NSF Program : 4715      COMPUTER SYSTEMS ARCHITECTURE
Fld Applictn: 0000912   Computer Science                        
              0104000   Information Systems                     
              0108000   Software Development                    
              0510403   Engineering & Computer Science          
              31        Computer Science & Engineering          
Program Ref : 
Abstract    :
              The propose is to build an experimental software system to test the            
              feasibility of mathematically formalizing physically realizable                
              microprocessor architectures and to test the feasibility of                    
              mechanically checking the correctness of system software written               
              in microprocessor machine language for such microprocessors.                   
              Although in principle such formalization and checking are possible,            
              they are widely suspected to be practically infeasible.  However,              
              a few recent experiments do demonstrate that a new approach of                 
              directly formalizing a machine architecture as a mathematical                  
              function in a mechanized logic offers promise.  A substantial                  
              fraction of a commonly used processor has been formalized and                  
              several machine code programs have been rigorously checked                     
              mechanically.  The initial prototype of the system will be used (a)            
              to test the feasibility of proofs of compiler correctness and (b)              
              to explore the development of a formalized programming environment             
              for system software, with focus on such issues as formalizing                  
              memory management and rigorously demonstrating performance figures.            
              The experiment will involve formalizing, in a mechanized logic, the            
              user instruction set of several commonly-used microprocessors, and             
              will also involve formalizing the semantics of some system traps.              
              The work will explore new areas in formalization, including cache              
              consistency, memory protection, and interrupts.  The machine                   
              architecture issues of proving correct high level language                     
              compilers. will also be explored.
