Title       : Adapting Algorithm Techniques for Program Debugging and Testing
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 27,  1991      
File        : a9109399

Award Number: 9109399
Award Instr.: Standard Grant                               
Prgm Manager: D. Helen Gill                           
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 15,  1991    
Expires     : July 31,  1994       (Estimated)
Expected
Total Amt.  : $60000              (Estimated)
Investigator: John T. Stasko stasko@cc.gatech.edu  (Principal Investigator current)
Sponsor     : GA Tech Res Corp - GIT
	      Office of Sponsored Programs
	      Atlanta, GA  303320420    404/385-0866

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2865,9264,
Abstract    :
              Algorithm animation, the use of dynamic graphics to illustrate program         
              behavior and enhance understanding, has been successfully utilized as          
              a pedagogical aid. Typically, algorithm animation involves post-mortem         
              program augmentation:  graphics are designed and developed for already         
              working programs.  The techniques used in algorithm animation systems          
              could be adapted for use during program debugging.  The objectives of          
              this research are to use the abstract mental models developed by               
              program designers as a basis for program visualizations and to develop         
              a framework that allows programmers to quickly and easily (without             
              graphics coding) create an animated visualization of a program prior           
              to testing and debugging.  Such a framework then could be used to              
              examine program behavior and identify errors in a uniquely different           
              manner than traditional textual debuggers.  The intended deliverables          
              include (1) a description and implementation of a methodology for              
              mapping program data and actions to dynamic graphics, (2) a prototype          
              animation-based visual debugger, and (3) an analysis of the                    
              effectiveness of such a system.
