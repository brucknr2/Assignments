Title       : Research Initiation: Semantics and Logics of Programs
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 27,  1991      
File        : a9109070

Award Number: 9109070
Award Instr.: Standard Grant                               
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  1991       
Expires     : June 30,  1994       (Estimated)
Expected
Total Amt.  : $59929              (Estimated)
Investigator: Scott F. Smith scott@cs.jhu.edu  (Principal Investigator current)
Sponsor     : Johns Hopkins University
	      3400 North Charles Street
	      Baltimore, MD  212182695    301/338-8000

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9264,
Abstract    :
              The most basic purpose of program semantics is to give a rigorous,             
              unambiguous definition of the meaning of programs, providing a                 
              standard for translator writers and users of the language.  Beyond             
              this basic purpose, equality and other relations on program fragments          
              can be defined, leading to logics for reasoning about programs and             
              formal justification for program transformations.  In the last                 
              twenty-five years, tremendous progress has been made.  The most                
              important step was the development of semantic domains to                      
              denotationally model programs, which have since been extended to model         
              the constructs of modern languages such as assignments, branches and           
              nondeterminism.  Logics for reasoning about programs have also been            
              defined for simple languages, using semantic domains as models to              
              guarantee soundness.  The difficulty is scaling up these ideas to              
              full-fledged languages with many features.  Operational semantics              
              provides an alternative to denotational semantics here, because there          
              is always at the bottom an interpreter, keeping ones feet on the               
              ground, and keeping the mathematics manageable.  This project takes an         
              operational approach to semantics, with the aim of giving semantics to         
              full-fledged programming languages and to furthermore define a rich            
              notion of eqivalence of programs so logics can thereupon be defined.           
              This undertaking is thus a synthesis of many different varieties of            
              language semantics.
