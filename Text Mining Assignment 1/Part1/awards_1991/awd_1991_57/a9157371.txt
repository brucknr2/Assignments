Title       : PYI: Loop Transformations and Scheduling Strategies for Parallelization Software
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : June 18,  1996      
File        : a9157371

Award Number: 9157371
Award Instr.: Continuing grant                             
Prgm Manager: Mukesh Singhal                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1991     
Expires     : January 31,  1998    (Estimated)
Expected
Total Amt.  : $305000             (Estimated)
Investigator: Rajiv Gupta   (Principal Investigator current)
Sponsor     : U of Pittsburgh
	      4200 Fifth Avenue
	      Pittsburgh, PA  152600001    412/624-4141

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2876,9216,9227,HPCC,
Abstract    :
              A framework for studying the interactions among loop transformation            
              and scheduling strategies and a parallelization tool that allows               
              experimentation with alternative parallelization strategies will be            
              developed.  The tool will accept architectural information to assist           
              in the application of transformations and selection of schedules.  The         
              results obtained from studying these interactions will be applied in           
              the development of an integrated approach to loop transformation and           
              scheduling.  In this approach the loop parallelization process will be         
              composed of three major phases.  The first phase, the parallelism              
              detection phase, will perform dependency analysis to identify loops            
              that can be executed in parallel.  In addition, it will perform                
              transformations, such as renaming, to convert sequential loops into            
              parallel loops.  The second phase, the parallelism scheduling phase,           
              will select an appropriate scheduling strategy.  The goal here will be         
              to choose a strategy that involves minimal run-time scheduling                 
              overhead and results in schedules that provide good load balancing and         
              high processor utilization.  The final phase, the parallelism                  
              enhancement phase, will transform the loops to increase the efficiency         
              with which parallelism is exploited.  The transformations that exploit         
              architectural characteristics will be applied to reduce                        
              synchronization and communication overhead.  Any decisions to utilize          
              special hardware features will be made in this phase.  Decisions of            
              activities performed in the later phases will be based upon the                
              decisions made in the earlier phases.  An integrated strategy will             
              allow convenient application of transformations after schedules have           
              been generated.  It will also ensure that the scheduling strategy does         
              not undo the effects of transformations that had been applied.
