Title       : Constructing Software From Specifications
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 28,  1992    
File        : a9101721

Award Number: 9101721
Award Instr.: Continuing grant                             
Prgm Manager: D. Helen Gill                           
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 15,  1991      
Expires     : June 30,  1994       (Estimated)
Expected
Total Amt.  : $221968             (Estimated)
Investigator: Richard B. Kieburtz   (Principal Investigator current)
Sponsor     : Oregon Grad Inst of S&
	      20000 NW Walker Road
	      Beaverton, OR  970068921    503/645-1121

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2880,
Abstract    :
                   Research in formal methods for software engineering has been              
              primarily concerned with software specification.  This research                
              explores the next step:  given a means of constructive specification,          
              to generate practical and efficient software by the technologies of            
              program transformation and specialization.  Studies have been done for         
              the construction of software from executable specifications by (1)             
              algorithms improvement by means of rule-based program transformation           
              and (2) a translation directed by an interface specification that              
              specifies data representations.  This research is focused on two               
              specific problems:  (a) extending program transformation rules so as           
              to introduce exceptions corresponding to asserted conditions of data           
              and (b) prototyping a program instantiation tool that translates an            
              executable specification into an independently specified semantic              
              model.  Systematic techniques for proving the semantic validity of             
              representations for data types will be explored.
