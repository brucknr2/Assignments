Title       : Constraint Logic Programming
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 5,  1991       
File        : a9108032

Award Number: 9108032
Award Instr.: Standard Grant                               
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : July 1,  1991       
Expires     : June 30,  1994       (Estimated)
Expected
Total Amt.  : $60000              (Estimated)
Investigator: Pascal Van Hentenryck pvh@cs.brown.edu  (Principal Investigator current)
Sponsor     : Brown University
	      164 Angell Street
	      Providence, RI  02912    401/863-2777

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9264,
Abstract    :
              The long-term goal of this research is to support established                  
              paradigms in programming language research in order to reduce                  
              programming effort and shorten development time.                               
              Constraint logic programming (CLP) is a new class of programming               
              languages whose basic operation is constraint solving over a                   
              computation domain.  CLP languages are best used for combinatorial             
              problems that often require considerable expertise and development             
              time.  Typical examples include scheduling and formal verification of          
              circuits.  CLP languages presently support partial enumeration                 
              (subsuming branch and bound and backtracking) as the main paradigm.  A         
              successful representative of the first generation of these languages           
              is CHIP which is now widely used in industry (e.g., at Siemens, Bull           
              and ICL) for tasks like the scheduling of ships in Hong Kong harbor.           
              This project will develop a second-generation CLP language, extending          
              the support for combinatorial problems in three directions:                    
                                                                                             
                1.  Constraint handling:  new reasoning and pruning techniques will          
                    be incorporated by providing new primitive operations such as            
                    constraint entailment and new ways of combining primitive                
                    constraints;                                                             
                                                                                             
                2.  Execution models:  dynamic programming and local search will be          
                    investigated in order to incorporate them into CLP languages;            
                                                                                             
                3.  Computation domains:  the project will investigate new                   
                    application areas such as computational geometry and                     
                    parsing where constraints play a fundamental role in order to            
                    identify new computation domains.
