Title       : Recognition of Visual Languages
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : September 28,  1993 
File        : a9108931

Award Number: 9108931
Award Instr.: Standard Grant                               
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : May 15,  1991       
Expires     : April 30,  1994      (Estimated)
Expected
Total Amt.  : $70000              (Estimated)
Investigator: Eric Golin  (Principal Investigator current)
              Simon Kaplan   (Principal Investigator current)
Sponsor     : U of Ill Urbana-Champaign
	      801 South Wright Street
	      Champaign, IL  61820    217/333-2186

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2877,9264,
Abstract    :
              A visual programming language allows the expression of a computation           
              by combining graphical elements such as icons, lines, and symbols.  A          
              visual program is a diagram specifying a program.  Flowcharts and              
              dataflow diagrams are common examples of visual programs.  Visual              
              programming has emerged as a key approach to enhancing computer                
              utilization, particularly by allowing users not familiar with computer         
              technology to create programs.                                                 
                   This research is on the underlying theory and technology required         
              to develop compilers and programming environments for visual                   
              programming languages.  Currently, visual language compilers and               
              visual programming environments are constructed ad hoc, at great               
              difficulty and expense.  A goal is to automate this construction using         
              a grammar specification of the visual language.                                
                   Two key problems in generating a visual language compiler are             
              syntactic and lexical analysis of visual programs.  There are three            
              tasks:  development of specialized parsing algorithms for restricted           
              classes of visual language; development of incremental parsing                 
              algorithms; and development of a model and mechanism for lexical               
              analysis of visual programs.  These will lead to a better                      
              understanding of the fundamental nature of visual languages, which are         
              not yet well understood.
