Title       : Empirical Evaluation of Multiparadigm Software Development
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : August 26,  1991    
File        : a9111507

Award Number: 9111507
Award Instr.: Standard Grant                               
Prgm Manager: D. Helen Gill                           
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 15,  1991    
Expires     : January 31,  1993    (Estimated)
Expected
Total Amt.  : $50000              (Estimated)
Investigator: Steven P. Reiss spr@cs.brown.edu  (Principal Investigator current)
Sponsor     : Brown University
	      164 Angell Street
	      Providence, RI  02912    401/863-2777

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9237,
Abstract    :
                   During software development, programmers employ a range of                
              different program representations, including pseudocode, data flow             
              diagrams, finite-state automata, control flow charts, and many others.         
              Programmers may also create their own custom representations or                
              languages to express their particular approach to a problem.                   
              Conventional development environments force programmers to translate           
              these different paradigms into a single textual representation that            
              the computer can understand, and to translate between this                     
              representation and their conceptualizations during coding, debugging,          
              and maintenance.  Multiparadigm development environments offer the             
              opportunity for programmers to work directly with their                        
              conceptualizations, to work with a program using whatever                      
              representation is most natural; such environments eliminate the need           
              to perform mental translations between programmer concepts and                 
              executable code.                                                               
                   The proposed research is to test the validity of multiparadigm            
              programming by designing experiments to answer the following kinds of          
              questions:                                                                     
                        Does it make programs easier to design or code?                      
                        Does it make programs or designs easier to understand?               
                        Does it simplify the process of enhancing existing programs          
                        to increase their functionality or their performance?                
                        Does it make it easier for programmers to track down and             
                        eliminate bugs?                                                      
                        Do software developers prefer it?
