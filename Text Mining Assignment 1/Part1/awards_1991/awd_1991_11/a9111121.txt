Title       : Combining Imperative and Constraint Programming in Inter- active and Parallel
               Computing
Type        : Award
NSF Org     : IIS 
Latest
Amendment
Date        : August 2,  1991     
File        : a9111121

Award Number: 9111121
Award Instr.: Standard Grant                               
Prgm Manager:                                         
	      IIS  DIV OF INFORMATION & INTELLIGENT SYSTEMS
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 1,  1991     
Expires     : January 31,  1994    (Estimated)
Expected
Total Amt.  : $70000              (Estimated)
Investigator: Bradley T. Vander Zanden bvz@cs.utk.edu  (Principal Investigator current)
Sponsor     : U of Tennessee Knoxville
	      404 Andy Holt Tower
	      Knoxville, TN  379960140    865/974-3466

NSF Program : 6845      HUMAN COMPUTER INTER PROGRAM
Fld Applictn: 0104000   Information Systems                     
              99        Other Sciences NEC                      
Program Ref : 6845,9264,
Abstract    :
              The rapid evolution of interactive and parallel computing has not              
              been accompanied by a similar evolution of languages to support                
              these models.  This research is to investigate a programming                   
              model for parallel applications based on a declarative paradigm                
              that has an interface with characteristics of popular spreadsheet              
              model of programming.  It includes multi-ways constraints and                  
              action procedures that can be triggered when constraints change                
              the values of variables.  It will support general purpose                      
              programming and will handle flow-of-control problems which become              
              difficult in large projects with parallel processing.  An                      
              important advantage of the spreadsheet model is that it is a                   
              clear step away from the traditional batch processing approach to              
              the production of interfaces.  It is a step toward an interactive              
              environment for interface design which gives the end user control              
              of the development process.  Furthermore, it provides a mechanism              
              for programming parallel processes directly in an interactive                  
              manner.  The spreadsheet interface does not itself assume a                    
              specific underlying parallel processor architecture.  Likewise,                
              it does not require the user to specify the details of flow-of-                
              control, a serious problem for parallel processing.  An                        
              interactive capability, which also handles flow-of-control for                 
              parallel processing, is expected to impact industrial design                   
              cycles dramatically, particularly for large projects.
