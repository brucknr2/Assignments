Title       : Pattern-Driven User Interfaces
Type        : Award
NSF Org     : IIS 
Latest
Amendment
Date        : August 1,  1994     
File        : a9123468

Award Number: 9123468
Award Instr.: Continuing grant                             
Prgm Manager: Gary W Strong                           
	      IIS  DIV OF INFORMATION & INTELLIGENT SYSTEMS
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : June 15,  1992      
Expires     : November 30,  1996   (Estimated)
Expected
Total Amt.  : $181958             (Estimated)
Investigator: Dan R. Olsen olsen@cs.byu.edu  (Principal Investigator current)
Sponsor     : Brigham Young University
	      D 341 Asb
	      Provo, UT  846021043    801/378-6177

NSF Program : 6845      HUMAN COMPUTER INTER PROGRAM
Fld Applictn: 0104000   Information Systems                     
              99        Other Sciences NEC                      
Program Ref : 9216,HPCC,
Abstract    :
                9123468  Olsen, Dan R.      This is the third year of a three-year continuing
              grant.  Direct manipulation user interfaces are difficult  to build.  User
              Interface Management Systems (UIMS) have attempted to alleviate this problem by
               providing models of the interactive dialog which can drive the interface
              implementation. Such models,  however, have failed to directly express the
              changes of information which comprise most operations in  direct manipulation
              interfaces.  A data pattern and transformation language based on matching will
              be  developed as a model of such additional processes.  Techniques will be
              developed for using this language  as a user interface design tool.  These
              techniques will include approaches for visually expressing the  patterns and
              transformations interactively.  This data transformation language can then be
              used for  creating visualization of data.  Such a language can express
              attribute modifications, style sheets, critics  (which monitor and advise
              users) and searches. Unifying the interaction in such a transformation language
               provides a foundation for more intelligent tools to reason about the behavior
              of the interface.
