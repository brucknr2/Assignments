Title       : Dynamically Configurable Operating Systems
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : May 14,  1991       
File        : a9102040

Award Number: 9102040
Award Instr.: Standard Grant                               
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  1991  
Expires     : August 31,  1995     (Estimated)
Expected
Total Amt.  : $128814             (Estimated)
Investigator: Larry L. Peterson   (Principal Investigator current)
Sponsor     : U of Arizona
	      601 Administration Building
	      Tucson, AZ  85721    602/621-2211

NSF Program : 2876      OPER SYSTEMS AND COMPILERS
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2875,
Abstract    :
              This project will design and experiment with a new generation                  
              operating system that supports the construction of distributed                 
              applications from a collection of building block pieces.  The approach         
              is based on the observation that communication objects are the key to          
              accessing services and resources in a distributed environment.  In             
              such an environment, users specify what services and resources they            
              want to access, and the operating system dynamically loads the                 
              communication objects necessary to access those services and                   
              resources.                                                                     
              At the heart of the system is an object infrastructure.  This                  
              infrastructure has two important features.  First, it is independent           
              of the user/kernel boundary.  That is, the component objects can               
              reside in either the kernel or in one or more user address spaces, and         
              objects can easily be migrated between address spaces.  Thus, new              
              objects can be built and tested in user address spaces for protection          
              reasons, and later migrated into the kernel for performance reasons.           
              Second, the kernel itself is dynamically configurable.  That is,               
              objects can be loaded into (and deleted from) the kernel at runtime as         
              required by the active applications.  This feature means that kernel           
              size is not a dominant factor--all trusted communication objects can           
              reside in the kernel while they are being used.                                
              Within this context, the proposal has two major themes:                        
                                                                                             
                -Designing operating system support for dynamically composable               
                 communication services, including implementation techniques                 
                 that support fast communication on shared-memory multiprocessors            
                                                                                             
                                                                                             
                -Investigating various decompositions of distributed systems into            
                 primitive building blocks, and understanding the principles that            
                 govern how those building blocks are composed to provide higher-            
                 level services.
