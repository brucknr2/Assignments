Title       : Abstractions for Organizing Classes
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : January 27,  1993   
File        : a9102578

Award Number: 9102578
Award Instr.: Continuing grant                             
Prgm Manager: Bruce H. Barnes                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  1991  
Expires     : February 28,  1994   (Estimated)
Expected
Total Amt.  : $171102             (Estimated)
Investigator: Karl J. Lieberherr lieber@cs.neu.edu  (Principal Investigator current)
Sponsor     : Northeastern University
	      360 Huntington Avenue
	      Boston, MA  021155096    617/373-5600

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2880,
Abstract    :
              The object-oriented paradigm has the potential to revolutionize the            
              construction of software.  The goal of this research is to develop,            
              formalize and provide tools for abstractions which are useful for              
              working with groups of classes.  Abstractions which have already been          
              formalized and whose value has already been proven include modules             
              (sometimes called clusters), class dictionary graphs, class                    
              dictionaries, etc.  This project is to investigate at least two                
              additional abstractions which have considerable potential: Propagation         
              Patterns and Contracts.  Mathematical models for object-oriented               
              software engineering will be developed along with the necessary                
              algorithms and tools.  The research involves both general principles,          
              which are applicable to any object oriented programming effort, and            
              implementation in the Demeter system, which allows the evaluation of           
              tools and their interaction with other sophisticated methods.
