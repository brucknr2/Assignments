Title       : Action Semantics and Partial Evaluation
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 10,  1991      
File        : a9102625

Award Number: 9102625
Award Instr.: Continuing grant                             
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : June 1,  1991       
Expires     : November 30,  1993   (Estimated)
Expected
Total Amt.  : $157373             (Estimated)
Investigator: David A. Schmidt schmidt@cis.ksu.edu  (Principal Investigator current)
              Olivier Danvy  (Co-Principal Investigator current)
Sponsor     : Kansas State University
	      2 Fairchild Hall
	      Manhattan, KS  665061103    913/532-6222

NSF Program : 2875      SYSTEM SOFTWARE
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 
Abstract    :
              This award supports research in extracting properties from action              
              semantics definitions and in improving programs by partial evaluation.         
              Results from the two areas will be combined into a methodology for             
              compiler construction based on staging semantic definitions                    
              automatically.  Such a methodology will ultimately be implemented as a         
              part of a programming language design and analysis workbench."                 
              Property extraction from action semantics builds on earlier research           
              on models and type inference for programs coded in action semantics            
              notation.  Type inference algorithms will be extended so that analysis         
              can be undertaken on language definitions per si to elicit key                 
              properties regarding block-structuredess and strong typing.  Such              
              information is crucial to the automated construction of correct and            
              efficient compilers.                                                           
              Research on partial evaluation has centered on effective program               
              improvement based on partial knowledge of the nature of a program's            
              input, for example, its type.  Application of partial evaluation to            
              compiler generation from interpreter definitions has proved fruitful.          
              The work is to be extended so that it formalizes and automates the             
              "staging" of and interpretive specification into a static semantics            
              processor and a dynamic semantics processor.
