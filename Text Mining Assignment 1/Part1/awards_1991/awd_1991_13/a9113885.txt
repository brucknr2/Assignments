Title       : Optimizing Parallel Programs
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : February 18,  1993  
File        : a9113885

Award Number: 9113885
Award Instr.: Continuing grant                             
Prgm Manager: Forbes D. Lewis                         
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : January 1,  1992    
Expires     : June 30,  1994       (Estimated)
Expected
Total Amt.  : $142410             (Estimated)
Investigator: Michael Wolfe novick@cse.ogi.edu  (Principal Investigator current)
Sponsor     : Oregon Grad Inst of S&
	      20000 NW Walker Road
	      Beaverton, OR  970068921    503/645-1121

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9216,
Abstract    :
              Many common compiler optimizations require precise analysis of the             
              flow of data within a program.  This project will extend the data flow         
              analysis algorithms to apply them to explicitly parallel imperative            
              languages.                                                                     
                                                                                             
              The basis for this work will be the Static Single Assignment (SSA)             
              form of a program, which was developed for sequential languages.  This         
              project will use a nested graph intermediate representation to                 
              describe the sequential and parallel parts of the program.  New                
              constructs will be added to the SSA form to describe the parallelism           
              and nondeterminism that arises from explicitly parallel programs.  The         
              algorithms for generating the SSA representation of a program will be          
              modified to handle the parallel constructs.  New algorithms will be            
              developed to find potential anomalies in parallel code.                        
                                                                                             
              A prototype compiler has been developed (with prior NSF support)               
              that recognizes the emerging ANSI standard parallel Fortran syntax.            
              All of the algorithms developed for this project will be implemented           
              in that system.
