Title       : Engineering Domain-Specific Implicit Invocation Mechanisms
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 8,  1992       
File        : a9112880

Award Number: 9112880
Award Instr.: Continuing grant                             
Prgm Manager: D. Helen Gill                           
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : September 1,  1991  
Expires     : February 28,  1994   (Estimated)
Expected
Total Amt.  : $142104             (Estimated)
Investigator: David Garlan garlan@cs.cmu.edu  (Principal Investigator current)
Sponsor     : Carnegie Mellon University
	      5000 Forbes Avenue
	      Pittsburgh, PA  152133815    412/268-5835

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2880,
Abstract    :
              Implicit invocation mechanisms are a fundamental technique for                 
              organizing software systems.  Typically, each of these mechanisms has          
              been produced - at significant cost - as an innovative design and              
              implementation.  One reason for this diversity is that each mechanism          
              has been designed for different domains.  Another reason, however, is          
              that the common properties of implicit invocation mechanisms are               
              poorly understood.  Consequently, it is hard to take advantage of              
              previous experiences when designing a new mechanism.  Now, however,            
              the collection of mechanisms and practical experience is rich enough           
              to permit the characterization of the design space so that choices can         
              be made in a principled and routine way.  To achieve this ability to           
              engineer implicit invocation mechanisms requires three steps.  First,          
              based on an analysis of the common and distinct aspects of existing            
              mechanisms, the underlying architecture of such mechanisms will be             
              formalized.  Second, how to create new mechanisms with specific                
              desirable properties by specializing this architecture according to            
              well-defined principles will be determined.  Third, this architecture          
              and these principles will be applied to two domains:  an environment           
              for manipulating formal specifications and an environment for                  
              interactive manipulation of encyclopedia articles.
