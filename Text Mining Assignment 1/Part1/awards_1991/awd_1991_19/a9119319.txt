Title       : A Harmonic Approach to Learning and Complexity
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 27,  1994      
File        : a9119319

Award Number: 9119319
Award Instr.: Continuing grant                             
Prgm Manager: Dana May Latch                          
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : August 15,  1992    
Expires     : January 31,  1995    (Estimated)
Expected
Total Amt.  : $400073             (Estimated)
Investigator: Merrick L. Furst   (Principal Investigator current)
              Steven Rudich  (Co-Principal Investigator current)
Sponsor     : Carnegie Mellon University
	      5000 Forbes Avenue
	      Pittsburgh, PA  152133815    412/268-5835

NSF Program : 2860      THEORY OF COMPUTING
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 9218,HPCC,
Abstract    :
              Harmonic analysis has played an important role in a broad                      
              range of areas.  Computer scientists have begun using it as a                  
              tool for resolving questions about combinatorial circuits.  In                 
              number theory and other mathematical disciplines, proofs                       
              obtained via harmonic analysis turn out to be astonishingly                    
              powerful.  This research will develop new, efficient and                       
              useful learning algorithms, new computational models and new                   
              mathematical relationships among finite functions through the                  
              use of harmonic expressions.  It will consider harmonic                        
              expressions themselves (independent of their relation to                       
              circuits) as models of finite functions.                                       
                                                                                             
              The computational theory of finite functions has grown over                    
              the last several decades.  The ability to discern and exploit                  
              the structure of finite functions in computational settings                    
              has improved dramatically.  The improvements have basically                    
              followed innovations in the models of computation which are                    
              studied.  For the past fifteen years, the model which has                      
              dominated the interpretation of how finite computations should                 
              be examined is the combinatorial circuit, wherein calculations                 
              are performed on Boolean values passing through logic gates.                   
              Placing constraints on the measurable aspects of circuits                      
              (e.g., their depth, their size in gates and which logic-gates                  
              are employed) isolates and delineates understandable classes                   
              of finite functions.  The most important and famous of these                   
              are the log-depth, polynomial-size functions (NC), the                         
              constant-depth, polynomial-size functions (AC), the constant-                  
              depth thresh-old circuits, whose gates are threshold functions                 
              (TC), and the monotone polynomial-size circuits, which allow                   
              no negations.                                                                  
                                                                                             
              These classes play both theoretical and practical roles.  The                  
              class NC corresponds well with functions that have a hope of                   
              being computed fast in parallel by plausibly-sized parallel                    
              machines.  The class AC corresponds with the functions that                    
              can be expressed by reasonably-sized programmable logic                        
              arrays.  And the class TC is intimately related to the class                   
              of functions represented by artificial neural networks, and                    
              may well model newer optical computing devices.  Thus, the                     
              strong motivation for studying circuits is to obtain improved                  
              insights into parallel programming, VLSI chip design, theories                 
              of learning and brain-like computation, and the potentials of                  
              new computing technologies.
