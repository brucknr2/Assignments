Title       : Automated Reasoning Software Engineering
Type        : Award
NSF Org     : CCR 
Latest
Amendment
Date        : July 27,  1994      
File        : a9115797

Award Number: 9115797
Award Instr.: Continuing grant                             
Prgm Manager: D. Helen Gill                           
	      CCR  DIV OF COMPUTER-COMMUNICATIONS RESEARCH 
	      CSE  DIRECT FOR COMPUTER & INFO SCIE & ENGINR
Start Date  : March 1,  1992      
Expires     : August 31,  1995     (Estimated)
Expected
Total Amt.  : $300000             (Estimated)
Investigator: Stephen J. Garland garland@lcs.mit.edu  (Principal Investigator current)
              John Guttag  (Co-Principal Investigator current)
Sponsor     : MIT
	      77 Massachusetts Avenue
	      Cambridge, MA  021394307    617/253-1000

NSF Program : 2880      SOFTWARE ENGINEERING AND LANGU
Fld Applictn: 0000099   Other Applications NEC                  
              31        Computer Science & Engineering          
Program Ref : 2880,9216,9218,9259,HPCC,
Abstract    :
              Today, tools are needed to support and promote the use of formalisms           
              in designing software interfaces concurrent algorithms, and digital            
              circuits.  Such tools must provide assistance with assessing the               
              semantic content of designs, not just with their syntax.  This project         
              involves development of one such tool, the Larch Prover (LP).  Current         
              applications of LP include debugging Larch specifications, reasoning           
              about circuit designs, and reasoning about concurrent algorithms.  The         
              project will continue developing LP in support of these and other              
              applications, e.g., reasoning about specification in Larch and other           
              specification languages, making use of specifications in optimizing            
              compilers, and verifying locking levels in Modula-3.                           
                                                                                             
              The project will develop front ends to serve as interfaces between             
              these applications and LP.  It will also enhance LP to serve better as         
              a back end for such applications.  Projected enhancements to LP                
              include more general quantification, additional inference mechanisms           
              (congruence closure, decision procedures for linear orders), and               
              further assistance for handling complex proofs ( scoping,                      
              polymorphism, proof management).  These enhancements will be driven by         
              the demands of applications: they will be made within a context that           
              is oriented towards debugging proofs and that emphasizes ease of               
              interaction, good performance, proof strategies based on                       
              simplification, and replayable proof scripts.
